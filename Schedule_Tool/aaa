# PULL_OUT_DATA = PULL_OUT_DATA.with_columns((pl.col('Shift Date').cast(pl.Date) - pl.duration(days=1)).alias('Previous Date'))

# PULL_OUT_MERGED_NIGHT_SHIFT = PULL_OUT_DATA.join(Night_Shift, left_on=['Shift Date','IEX'],right_on=['Date', 'IEX_ID'], how='left')
# PULL_OUT_MERGED_PREVIOUS_DATE = PULL_OUT_MERGED_NIGHT_SHIFT.join(Previous_Date,left_on=['Previous Date', 'IEX'],right_on=['Date', 'IEX_ID'],how='left')
# PULL_OUT_MERGED_RENAME = PULL_OUT_MERGED_PREVIOUS_DATE.rename({'Datetime_First_Start_Shift':'Previous_Start_Shift','Shift Tracking':'Previous_Shift_Tracking'})

# PULL_OUT_NS_CHECK = PULL_OUT_MERGED_RENAME.with_columns(
#     pl.when(
#         (pl.col('Night_Shift') == 0) & 
#         (pl.col('Start Time').dt.time() < pl.time(18, 0)) & 
#         (pl.col('Start Time').dt.time() >= pl.time(0, 0)) & 
#         (pl.col('Previous_Start_Shift').dt.time() <= pl.time(23, 59)) & 
#         (pl.col('Previous_Start_Shift').dt.time() >= pl.time(15, 0))
#     ).then(False).otherwise(True).alias('Night_Shift_2_Check')
# )

# UPDATE_PULL_OUT_NS = PULL_OUT_NS_CHECK.with_columns(
#     pl.when(pl.col('Night_Shift_2_Check') == False)
#       .then(1)
#       .otherwise(pl.col('Night_Shift'))
#       .alias('Night_Shift')
# )

# PULL_OUT_DATE_CONVERTED = UPDATE_PULL_OUT_NS.with_columns(
#     pl.when((pl.col('Start Time').dt.hour() >= 0) & (pl.col('Start Time').dt.hour() < 12) & (pl.col('Night_Shift') == 1))
#         .then(pl.col('Shift Date') - pl.duration(days=1))
#         .when((pl.col('Start Time').dt.hour() >= 0) & (pl.col('Start Time').dt.hour() < 18) & (pl.col('Night_Shift') == 0))
#         .then(pl.col('Shift Date'))
#         .when((pl.col('Start Time').dt.hour() >= 18) & (pl.col('Night_Shift') == 1))
#         .then(pl.col('Shift Date'))
#         .otherwise(pl.col('Shift Date'))
#         .alias('Date_Converted')
# )
